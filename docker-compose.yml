version: '3.8'

services:
  # PHP Application
  app:
    build:
      context: .
      dockerfile: docker/app/Dockerfile
    container_name: php_app
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini
    networks:
      - app-network
    depends_on:
      - postgres
    restart: unless-stopped

  # Nginx
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    container_name: nginx_server
    ports:
      - "${NGINX_HTTP_PORT:-8080}:${NGINX_PORT:-80}"
      - "${NGINX_HTTPS_PORT:-443}:443"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      - ./docker/nginx/entrypoint.sh:/entrypoint.sh
    entrypoint: /entrypoint.sh
    command: [ "nginx", "-g", "daemon off;" ]
    environment:
      - NGINX_PORT=${NGINX_PORT}
      - NGINX_HOST=${NGINX_HOST}
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

  # PostgreSQL
  postgres:
    image: postgres:${DB_VERSION}
    container_name: postgres_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped


volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge